{"ast":null,"code":"import express from 'express';\nimport mongoose from 'mongoose';\nimport { validationResult } from 'express-validator';\nimport { postCreateValidation, registerValidation } from './auth.js';\nimport { loginValidation } from './auth.js';\nimport checkAuth from './checkAuth.js';\nimport { register, login, getMe } from './functions.js';\nimport * as postManager from './postManager.js';\nmongoose.connect('mongodb+srv://admin:88888888@cluster0.laqq1zj.mongodb.net/blog?retryWrites=true&w=majority').then(() => console.log('db is ok')).catch(err => console.log('db is pizdec', err));\n\n/*\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst bodyParser = require('body-parser');*/\nconst app = express();\n/*app.use('/path', express.static(path.join(__dirname)));\r\napp.use(bodyParser.urlencoded({ extended: false }));*/\n\napp.use(express.json());\napp.get('/', (req, res) => {\n  //console.log(req);\n  posttest();\n  res.send('123123');\n});\napp.post('/register', registerValidation, register);\napp.post('/login', loginValidation, login);\napp.get('/me', checkAuth, getMe);\napp.post('/posts', checkAuth, postCreateValidation, postManager.create);\napp.get('/posts/:id', postManager.getOne);\napp.get('/test/:xui/', (req, res) => {\n  console.log(req.params);\n  console.log(req.query);\n  res.send(index.html.body);\n});\napp.listen(4444, err => {\n  if (err) {\n    return console.log(err);\n  }\n  console.log('vse ok');\n});\nfunction posttest() {\n  fetch('http://localhost:4444/register', {\n    method: 'POST',\n    body: JSON.stringify({\n      'fullname': 'vasil vasilyovich',\n      'email': \"zolupa7@zlp.com\",\n      'password': \"zolupa123\"\n    })\n  }).then(results => results.json()).then(console.log);\n}\n/*document.addEventListener('butt', function () { });\r\nfunction xz(value) {\r\n    document.getElementById('butt').value;\r\n\r\n    console.log(value);\r\n}*/\n//posttest();","map":{"version":3,"names":["express","mongoose","validationResult","postCreateValidation","registerValidation","loginValidation","checkAuth","register","login","getMe","postManager","connect","then","console","log","catch","err","app","use","json","get","req","res","posttest","send","post","create","getOne","params","query","index","html","body","listen","fetch","method","JSON","stringify","results"],"sources":["C:/xz/delivery/src/index.js"],"sourcesContent":["import express from 'express';\r\n\r\nimport mongoose from 'mongoose';\r\n\r\nimport { validationResult } from 'express-validator';\r\nimport { postCreateValidation, registerValidation } from './auth.js';\r\nimport { loginValidation } from './auth.js';\r\nimport checkAuth from './checkAuth.js';\r\n\r\nimport { register, login, getMe } from './functions.js';\r\nimport * as postManager from './postManager.js';\r\n\r\n\r\nmongoose.connect('mongodb+srv://admin:88888888@cluster0.laqq1zj.mongodb.net/blog?retryWrites=true&w=majority',)\r\n    .then(() => console.log('db is ok'))\r\n    .catch((err) => console.log('db is pizdec', err));\r\n\r\n/*\r\nconst express = require('express');\r\nconst path = require('path');\r\nconst bodyParser = require('body-parser');*/\r\nconst app = express();\r\n/*app.use('/path', express.static(path.join(__dirname)));\r\napp.use(bodyParser.urlencoded({ extended: false }));*/\r\n\r\n\r\napp.use(express.json());\r\n\r\napp.get('/', (req, res) => {\r\n    //console.log(req);\r\n    posttest();\r\n    res.send('123123');\r\n});\r\n\r\n\r\n\r\napp.post('/register', registerValidation, register);\r\napp.post('/login', loginValidation, login);\r\napp.get('/me', checkAuth, getMe);\r\napp.post('/posts', checkAuth, postCreateValidation, postManager.create);\r\napp.get('/posts/:id', postManager.getOne);\r\napp.get('/test/:xui/', (req, res) => {\r\n\r\n    console.log(req.params);\r\n    console.log(req.query);\r\n    res.send(index.html.body);\r\n});\r\n\r\napp.listen(4444, (err) => {\r\n    if (err) {\r\n        return console.log(err);\r\n    }\r\n    console.log('vse ok');\r\n});\r\n\r\n\r\nfunction posttest() {\r\n    fetch('http://localhost:4444/register', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'fullname': 'vasil vasilyovich',\r\n            'email': \"zolupa7@zlp.com\",\r\n            'password': \"zolupa123\",\r\n        })\r\n    })\r\n        .then(results => results.json())\r\n        .then(console.log);\r\n\r\n}\r\n/*document.addEventListener('butt', function () { });\r\nfunction xz(value) {\r\n    document.getElementById('butt').value;\r\n\r\n    console.log(value);\r\n}*/\r\n//posttest();\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAE7B,OAAOC,QAAQ,MAAM,UAAU;AAE/B,SAASC,gBAAgB,QAAQ,mBAAmB;AACpD,SAASC,oBAAoB,EAAEC,kBAAkB,QAAQ,WAAW;AACpE,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,SAASC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,gBAAgB;AACvD,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAG/CT,QAAQ,CAACU,OAAO,CAAC,4FAA4F,CAAE,CAC1GC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CAAC,CACnCC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEE,GAAG,CAAC,CAAC;;AAErD;AACA;AACA;AACA;AACA,MAAMC,GAAG,GAAGjB,OAAO,EAAE;AACrB;AACA;;AAGAiB,GAAG,CAACC,GAAG,CAAClB,OAAO,CAACmB,IAAI,EAAE,CAAC;AAEvBF,GAAG,CAACG,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACvB;EACAC,QAAQ,EAAE;EACVD,GAAG,CAACE,IAAI,CAAC,QAAQ,CAAC;AACtB,CAAC,CAAC;AAIFP,GAAG,CAACQ,IAAI,CAAC,WAAW,EAAErB,kBAAkB,EAAEG,QAAQ,CAAC;AACnDU,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAEpB,eAAe,EAAEG,KAAK,CAAC;AAC1CS,GAAG,CAACG,GAAG,CAAC,KAAK,EAAEd,SAAS,EAAEG,KAAK,CAAC;AAChCQ,GAAG,CAACQ,IAAI,CAAC,QAAQ,EAAEnB,SAAS,EAAEH,oBAAoB,EAAEO,WAAW,CAACgB,MAAM,CAAC;AACvET,GAAG,CAACG,GAAG,CAAC,YAAY,EAAEV,WAAW,CAACiB,MAAM,CAAC;AACzCV,GAAG,CAACG,GAAG,CAAC,aAAa,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAEjCT,OAAO,CAACC,GAAG,CAACO,GAAG,CAACO,MAAM,CAAC;EACvBf,OAAO,CAACC,GAAG,CAACO,GAAG,CAACQ,KAAK,CAAC;EACtBP,GAAG,CAACE,IAAI,CAACM,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC;AAC7B,CAAC,CAAC;AAEFf,GAAG,CAACgB,MAAM,CAAC,IAAI,EAAGjB,GAAG,IAAK;EACtB,IAAIA,GAAG,EAAE;IACL,OAAOH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;EAC3B;EACAH,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;AACzB,CAAC,CAAC;AAGF,SAASS,QAAQA,CAAA,EAAG;EAChBW,KAAK,CAAC,gCAAgC,EAAE;IACpCC,MAAM,EAAE,MAAM;IACdH,IAAI,EAAEI,IAAI,CAACC,SAAS,CAAC;MACjB,UAAU,EAAE,mBAAmB;MAC/B,OAAO,EAAE,iBAAiB;MAC1B,UAAU,EAAE;IAChB,CAAC;EACL,CAAC,CAAC,CACGzB,IAAI,CAAC0B,OAAO,IAAIA,OAAO,CAACnB,IAAI,EAAE,CAAC,CAC/BP,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}